
doctype 5
html
  head
  meta(charset="utf-8")
  meta(name="viewport", content="width=1920")
  title 爱特程序知识补充

  mixin css(href)
    link(rel="stylesheet", href=href)
  +css("assets/google-code-prettify.tomorrow/tomorrow.css")
  +css("assets/impress.js/css/impress-demo.css")
  +css("index.css")

  body.impress-not-supported

    .fallback-message
      p 你的浏览器<b>不支持需要的特性</b>

    #impress

      mixin step(x, y, rotate, scale)
        .step(class=attributes.class, id=attributes.id, data-x=x, data-y=y, data-rotate=rotate, data-scale=scale)
          block

      mixin code(lang)
        pre.prettyprint(class="lang-"+lang)
          block

      mixin urllink(url)
        a(href=url, target="_blank")=url

      +step("1500", "0", "0", "2.5")#title
        h1 爱特程序知识补充
        p 2013.12

      +step("0", "1800")#url
        h2 URL

      +step("1500", "1800").slide#url-part
        h3 URL 组成部分
        p.url-example <a>http://</a><a>www.example.com</a><a>/demo.aspx</a><a href="#/query-string">?id=1&amp;page=2</a><a href="#/fragment-identifier">#comment</a>
        ul
          li <span>http://</span> 协议(scheme)
          li <span>www.example.com</span> 域名(domain)
          li <span>/demo.aspx</span> 路径(path)
          li <span>?id=1&amp;page=2</span> 查询字符串(query string)
          li <span>#comment</span> (fragment identifier)

      +step("3000", "1800").slide#query-string
        h3 Query String
        p http://www.example.com/demo.aspx<span class="highlight">?id=1&amp;page=2</span>#comment
        p URL 中的一个子字符串，内容为 GET 模式的表单参数
        p 以 “?” 字符为起点，每个参数以 “&amp;” 字符隔开，再以 “=” 字符分开参数名称与数据
        p 获取方法
        +code("cs").
          // 后台
          Request.Url.Query
          // 但大多数情况下会用这个，直接取得查询字符串中某个参数的值
          Request.QueryString["参数名"]
        +code("js").
          // 前台
          window.location.search
        p 设置方法 -- 跳转到新的 URL
        +code("cs").
          // 后台
          Response.Redirect("demo.aspx?ID&#61;" + ID)
        +code("html").
          // 数据绑定时
          &lt;a href='demo.aspx?ID=<span class="nocode">&lt;%# Eval("ID") %&gt;</span>' runat="server" &gt;XXXX&lt;/a&gt;
        +code("js").
          // 前台，页面将会重新载入
          window.location.search = "?ID=1"

      +step("4500", "1800").slide#fragment-identifier
        h3 Fragment Identifier
        p http://www.example.com/demo.aspx?id=1&amp;page=2<span class="highlight">#comment</span>
        p URL 中的一个子字符串，内容为当前页面中的某个标记的名字，以 “#” 字符为起点
        p 获取方法
        +code("cs").
          // URL 中的这个部分<em>不会</em>被发送到服务器，下面的属性总会返回空字符串
          <del>Request.Url.Fragment</del>
        +code("js").
          // 前台
          window.location.hash
        p 设置方法
        +code("cs").
          // 后台
          Response.Redirect("demo.aspx#comment")
        +code("js").
          // 前台，与之前的 Query String 不同，不会引起页面的重新载入
          window.location.hash = "#comment"
        p 常见用法
        ul.indent
          li 页面滚动到 id 为对应值的元素的位置
          li JS中使用，保存少量数据，页面刷新、复制 URL 到别的地方后仍然保持

      +step("3000", "2900", "180")#id
        h2 ID

      +step("1500", "2900", "180").slide#ids
        h3 控件的 *ID 属性
        ul
          li ID
          li ClientID
          li UniqueID

      +step("0", "2900", "180").slide#id-example
        h3 例子
        p ASP.NET 代码
        +code("html").
          &lt;asp:Content ID="Content2" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server"&gt;
              &lt;asp:Repeater ID="Repeater1" runat="server"&gt;
                &lt;asp:TextBox ID="TextBox1" runat="server"&gt;&lt;/asp:TextBox&gt;
              &lt;/asp:Repeater&gt;
          &lt;/asp:Content&gt;
        p TextBox1 对应的这三个属性为
        +code("cs").
          TextBox1.ID == "Repeater1"
          TextBox1.ClientID == "ContentPlaceHolder1_Repeater1_TextBox1_0"
          TextBox1.UniqueID == "ctl00$ContentPlaceHolder1$Repeater1$ctl00$TextBox1"
        p 生成的 HTML 标签为
        +code("html").
          &lt;input name="ctl00$ContentPlaceHolder1$Repeater1$ctl00$TextBox1" id="ContentPlaceHolder1_Repeater1_TextBox1_0" type="text"&gt;&lt;/input&gt;
        p 常用情况
        +code("cs").
          // URL hash 定位
          Response.Redirect("XXXX.aspx#" + TextBox1.ClientID);
        +code("js").
          // jQuery 选择 TextBox1
          $('#<%= TextBox1.ClientID %>')

      +step("-1500", "2900", "180").slide#id-mode
        h3 ClientID 生成方式
        p ClientIDMode
        p 
          +urllink("http://msdn.microsoft.com/zh-cn/library/system.web.ui.control.clientidmode.aspx")

      +step("-3000", "4000")#misc
        h2 杂项

      +step("-1500", "4000").slide#use-link-more
        h3 更多地使用链接
        p 不需要提交表单的按钮，尽量使用链接代替，a 或者 HyperLink
        p 比如翻页、选项卡切换、注销时使用
        +code("html")
          &lt;a href="?page=2"&gt;2&lt;/a&gt;
          &lt;a href="?type=XXXX"&gt;XXXX&lt;/a&gt;
          &lt;a href="Logout.aspx"&gt;注销&lt;/a&gt;
        p 优点
        ul.indent
          li 在大多数情况下载入速度不变或者更快，因为有些情况下可以减少请求次数
          li <em>对用户的刷新、在新标签页中打开、复制链接、添加书签、分享等行为更友好</em>

      +step("0", "4000").slide#null-coalescing
        h3 null 合并运算符
        p null 合并运算符 “??”，用法为
        +code("cs").
          a ?? b
        p 相当于
        +code("cs").
          a == null ? b : a
        p 常见用法
        +code("cs").
          // 获取请求内容时带上默认值
          var page = Request["page"] ?? "1"; // 另外注意之后要判断是否为数字
          // 数据库中的可空值类型字段的处理
          var count = entity.Count ?? 0;

      +step("1500", "4000").slide#avoid-static
        h3 远离 static 变量
        p 不要在 ASP.NET 中使用 static 的变量
        p static 的变量的生存期是整个应用程序的运行期，内容是整个应用程序共享的
        p ASP.NET 应用程序生命周期中会处理多个(同时或者不同时)的请求
        p 如果想要保存整个应用程序共享的临时数据，随程序退出消失，应当使用 Application
        p 与 static 的变量不同，Application 是线程安全（可以在存在并发的时候使用）的

      +step("3000", "4000").slide#eval-child
        h3 Eval 访问子属性
        p 数据绑定时 Eval 不但可以访问当前绑定对象的属性，属性的属性也是可以直接访问的
        p 比如
        +code("cs")
          &lt;%# Eval("User.Name") %&gt;
        p 这在配合外键与 O/RM 时尤为便利

      +step("4500", "4000").slide#login-in-chinese
        h3 “登录”还是“登陆”
        ul.indent
          li 谷歌 登录
          li 百度 登录
          li 维基 登录
          li 腾讯 登录
          li 淘宝 登录
          li 微软 登录
          li 新浪 登录
          li 网易 登录
          li 搜狐 登录
          li ...

      +step("6000", "4000").slide#other
        h3 其他
        p 这个展示页面是怎么做的？ 使用
          a(href="https://github.com/bartaz/impress.js/", target="_blank").
            impress.js
        p 代码高亮是怎么做的？ 使用
          a(href="http://code.google.com/p/google-code-prettify/", target="_blank").
            google-code-prettify

      +step("1700", "2000", "0", "6")#overview

    script(src="assets/google-code-prettify/prettify.js")
    script.
      prettyPrint()

    script(src="assets/impress.js/js/impress.js")
    script.
      impress().init()
